version: '2'
services:
  redis:
    scale: 1
    start_on_create: true
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 6379
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      reinitializing_timeout: 60000

  logstash-indexer:
    metadata:
      logstash:
        inputs: |
          redis {
            host => "redis"
            port => "6379"
            data_type => "list"
            key => "logstash"
          }
        filters: |
          if "kernel" in [type] {
            grok {  # kernel logs
              match => {"message" => "%{SYSLOGTIMESTAMP:timestamp}.*kernel: \[.*\] %{GREEDYDATA:message}"}
              overwrite => [ "message" ]
            }
          }

          if "kernel" not in [type] {
            mutate {
              rename => { "docker.id" => "container_id" }
              rename => { "docker.name" => "container_name" }
              rename => { "docker.image" => "docker_image" }
              rename => { "docker.hostname" => "docker_hostname" }
            }
          }

          # We drop the logs from Rancher stack Network (at the moment)
          if "rancher/net" in [docker][image] {
           drop {}
          }

        outputs: |
          elasticsearch {
            hosts => ["elasticsearch.rancher.internal:9200"]
            user => "{{elasticsearch_svcadmin_username}}"
            password => "{{elasticsearch_svcadmin_password}}"
          }

  logstash-collector:
    metadata:
      logstash:
        inputs: |
          udp {
            port => 5000
            codec => "json"
          }
          file {
            path => "/host/var/log/kern*.log"
            type => "kernel"
          }
        outputs: |
          redis {
            host => "redis"
            port => "6379"
            data_type => "list"
            key => "logstash"
          }

  elasticsearch:
    scale: {{elk_monitoring_minimum_master_nodes}}
    retain_ip: true
    metadata:
      elasticsearch-config: |
{{ lookup('template', elk_monitoring_conf_file) | indent(8, True) }}

{% if elasticsearch_plugins_name | length > 0 %}
      elasticsearch-plugins: |
{% for plugin in elasticsearch_plugins_name %}
        {{plugin}}
{% endfor %}
{% endif %}

{% if elasticsearch_license_file != "" %}
  elasticsearch-setup:
    metadata:
      license: |
{{ lookup('template', elasticsearch_license_file) | indent(8, True) }}
{% endif %}

  elasticsearch-prometheus-exporter:
    scale: 1
    start_on_create: true
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 7979
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      reinitializing_timeout: 60000

  curator:
    metadata:
      curator-actions: |
{{ lookup('template', elk_monitoring_curator_config_file) | indent(8, True) }}

  kibana-setup:
    metadata:
      index-pattern: |
{{ lookup('template', elk_monitoring_kibana_conf_file) | indent(8, True) }}
